//全部小文字でもいいけど、予約後は大文字で書くのがおすすめ
//データベース作成
CREATE DATABASE myapp
DEFAULT CHARACTER SET utf8;

//データベース削除
DROP DATABASE IF EXISTS myapp;

//テーブル作成
CREATE TABLE members{
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(20) DEFAULT '無所属',
	age INT,
	updated DATE
);

//テーブル削除
DROP TABLE IF EXISTS members;

//データ挿入
INSERT INTO members(id,name,depart,age,updated)
VALUES(1,'山田太郎','営業',40,'2014-12-01');

//カラムを指定して挿入
INSERT INTO members(name,age)
VALUES ('鈴木さくら',25);

//全カラムに対して挿入はカラムの並び省略化
	INSERT INTO members
	VALUES(3,'佐藤次郎','人事部',35,'2015-01-15');

//連続入力
INSERT INTO members(name,depart,age)
VALUES
('田中一郎','経理部',48),
('山口弘子','営業部',28),
('渡辺順二','人事部',58),
('中島博之','総務部',49),
('山下圭吾','経理部',23);

//SELECT

//全件抽出
SELECT * FROM members;

//nameカラム取得
SELECT name FROM members;

//name,ageカラム取得
SELECT name,age FROM members;

//WHERE句で絞り込み
SELECT * FROM members WHERE age = 25;//==ではないので注意！
SELECT * FROM members WHERE age > 25;
SELECT * FROM members WHERE age >= 25;

//〜でない
SELECT * FROM members WHERE age<>25;
//!=は使わない！（動く環境と動かない環境がある）
SELECT * FROM members WHERE age > 25 AND age < 40;
//&&は使わない！
SELECT * FROM members WHERE age > 25 OR updated <= '2015-01-15';
//updatedの「以前」の書き方注意！

//BETWEEN(端含む)
SELECT * FROM members WHERE updated BETWEEN '2015-01-15' AND '2015-02-15';
//INに含まれるデータを抽出
SELECT * FROM members WHERE depart IN('営業部','人事部');
//null判定
SELECT * FROM members WHERE updated IS NULL;
//NULLは=で比較できないので注意!
SELECT * FROM members WHERE updated IS NOT NULL;
//あいまい検索(%は0文字以上の任意の文字列を表す)
SELECT * FROM members WHERE name LIKE '鈴木%';
//「木」のうしろに何が来ようと対象
SELECT * FROM members WHERE name LIKE '%木%';
//木を含む名前を検索
SELECT * FROM members WHERE name LIKE '%田';
//田で終わる名前を検索
//北が含まれない
SELECT * FROM members WHERE name NOT LIKE '%北%';
//NO TLIKEで含まれない

//ORDER BY(並び替え)
//年齢降順(ASCもDESCもケツはC
SELECT * FROM members ORDER BY age DESC;
//年齢昇順
SELECT * FROM members ORDER BY age ASC;
SELECT * FROM members ORDER BY age;
//ASC省略可

//WHERE句との組み合わせは先にWHERE句
SELECT * FROM members WHERE updated IS NOT NULL
ORDER BY age ASC;

//ORDER BYは複数指定できる
SELECT * FROM members ORDER BY age DESC.name ASC;
//件数制限(LIMITはMySQL限定)
SELECT * FROM members ORDER BY age DESC LIMIT 3;

//OFFSET指定
SELECT * FROM members ORDER BY age DESC LIMIT 3 OFFSET 1;

//UPDATE(更新)

UPDATE member SET depart = '人事部';
WHERE name = '鈴木さくら';//この一文がなければ全員人事部に変更になる

//SETも列挙可能
UPDATE members SET depart = '人事部',age = age+1;//age+=1はできないので注意!
WHERE name = '鈴木さくら';

//DELETE(削除)(WHERE句を忘れたら全部消える)(大事件)
DELETE FROM members WHERE id = 3;

//集計関数(基本結果は1レコード)
//件数
SELECT count(*) FROM members;
//年齢の平均(aveではないので注意)
SELECT avg(age) FROM members;
//年齢の最大
SELECT max(age) FROM members;
//年齢の最小
SELECT min(age) FROM members;
//年齢の合計
SELECT sum(age) FROM members;

//GROUP BY(同一項をまとめる、主に集計関数と共に使う。結果はグループの数だけ)
SELECT depart avg(age) FROM members;
GROUP BY depart;

//HAVING(GROUP BYした結果に対する絞り込み)
SELECT depart,avg(age) FROM members;
GROUP BY depart;
HAVING avg (age) >= 30;
